operation Interaction hasOperation(op : Operation) : Boolean {
	for(message in self.message){
		if(message.signature == op){
			return true;
		}
	}
	return false;
}

operation Interaction hasComponent(component : Component) : Boolean {
	for(property in self.ownedAttribute){
		if(property.type == component){
			return true;
		}
	}
	return false;
}

operation Interaction getIndexOf(fragment : InteractionFragment) : Integer{

	var indexOf : Integer = self.getFragments()->indexOf(fragment);
	return indexOf;
}

operation InteractionOperand getIndexOf(fragment : InteractionFragment) : Integer{

	var indexOf : Integer = self.getFragments()->indexOf(fragment);
	return indexOf;
}

operation Interaction addFragmentAt(fragment : InteractionFragment, indexOf : Integer){
	self.getFragments().add(indexOf,fragment);
}

operation Interaction removeLifelineOf(component : Component) {
	self.getLifelines().remove(component.getLifeline(self));
}

operation Interaction getComponentLifeline(component : Component) : Lifeline{
	for(lf in self.getLifelines){
		var represents = lf.getRepresents();
		for(property in component.getAllInteractionProperties())
			if(property == represents)
				return lf;
	}
}

operation Interaction getClassLifeline(class : Class) : Lifeline{
	self.println();
	self.getLifelines().println();
	
	var lifelines = Lifeline.allInstances->select(lf | lf.getInteraction() == self);
	
	for(lf in lifelines){
		if(lf.getRepresents().getType() == class)
			return lf;
	}
	/*
	for(lf in self.getLifelines()){
		lf.println();
		var represents = lf.getRepresents();
		for(property in class.getAllInteractionProperties())
			if(property == represents)
				return lf;
	}*/
}

operation Interaction getUseCase() : UseCase{
	return self.getNamespace();
}


//messaggi in uscita da una lifeline
operation Interaction getMessageOf(component : Component) : Sequence(Message){
	var returnValue : Sequence(Message) = new Sequence(Message);
	var componentLf = self.getComponentLifeline(component);
	for (mes in self.getMessages()) { 
		if( componentLf.getCoveredBys()->exists(iterator | iterator == mes.getSendEvent()) ){
			returnValue.add(mes);
		}
	}
	return returnValue;
}

operation Interaction getLifeline(mos : MessageOccurrenceSpecification) : Lifeline{
	for(lf in self.getLifelines()){
		if(lf.getCoveredBys()->exists(iterator | iterator == mos))
			return lf;
	}
	return null;
}

operation Interaction createLifelineOf(component : Component) : Lifeline {
	var lifeline = self.createLifeline(component.getName()+"_Lifeline");
	var componentRepresents = self.createOwnedAttribute(component.getName(), component);
	lifeline.setRepresents(componentRepresents);
	return lifeline;
}