operation Operation splitting(numberOfSplitting : Integer, percentage : Integer) : Boolean{
	var turnback : Boolean = false;
	
	var message = "fai la scelta: 0- splitto il componente con l'operazione critica; 1- splitto l'operazione critica";
	var caseValue = UserInput.promptInteger(message, 0);
	
	switch (caseValue) {
		case "1" : 
			turnback = self.splittingOperation(numberOfSplitting, percentage);
		case "2" : "2".println();
		case "3" : "3".println(); 
		default:
			turnback = self.splittingComponent(numberOfSplitting, percentage);
	}
	
	return turnback;
}

operation Operation splittingComponent( numberOfSplitting : Integer, percentage : Integer ) : Boolean {	
	//static
	var sourceComponent : Component = self.class;
	var splittedComponent = self.splitComponent(percentage);
	
	//dynamic
	var interaction = self.getAllInteractions()->first();
	var sourceLifeline = sourceComponent.getLifeline(interaction);
	var lifeline = interaction.createLifeline(splittedComponent.name+"lifeline"); //L2
	
	//deploy
	var listNodesOfSplittedComponent = splittedComponent.getNodes();

	var spProp = interaction.createOwnedAttribute(splittedComponent.name, splittedComponent);
	lifeline.setRepresents(spProp);
	
	splittedComponent.moveOperation(self); //sposta l'operazione sul componente appena creato
	
	var newMessage = interaction.createMessage(self.name+"_message");
	
	lifeline.cloneAppliedStereotypesFrom(sourceLifeline);
	lifeline.setVisibility(sourceLifeline.getVisibility());
		
	var sendMOS : MessageOccurrenceSpecification = new MessageOccurrenceSpecification;
	var receiveMOS : MessageOccurrenceSpecification = new MessageOccurrenceSpecification;
	
	interaction.getFragments().add(sendMOS);
	interaction.getFragments().add(receiveMOS);
	
	newMessage.setSendEvent(sendMOS);
	newMessage.setReceiveEvent(receiveMOS);
	
	var besL2 : BehaviorExecutionSpecification = new BehaviorExecutionSpecification;
	interaction.getFragments().add(besL2);
	
	var messageEnd : ExecutionOccurrenceSpecification = new ExecutionOccurrenceSpecification;
	interaction.getFragments().add(messageEnd);
	
	besL2.start = receiveMOS ;
	besL2.finish = messageEnd;
	
	lifeline.getCoveredBys().add(besL2);
	lifeline.getCoveredBys().add(receiveMOS);
	
	//return 
	return true;
}

operation Operation splittingOperation(numberOfSplitting : Integer, percentage : Integer) : Boolean{
	
}